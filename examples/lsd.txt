#version 330

uniform vec2 _canvasRect;
uniform float _time;

// 2D Random
float random (in vec2 st) {
    return fract(sin(dot(st.xy,
                         vec2(12.9898,78.233)))
                 * 43758.5453123);
}

float noise (in vec2 st) {
    vec2 i = floor(st);
    vec2 f = fract(st);

    float a = random(i);
    float b = random(i + vec2(1.0, 0.0));
    float c = random(i + vec2(0.0, 1.0));
    float d = random(i + vec2(1.0, 1.0));

    vec2 u = f*f*(3.0-2.0*f);

    return mix(a, b, u.x) +
            (c - a)* u.y * (1.0 - u.x) +
            (d - b) * u.x * u.y;
}

void main() {
	float time = _time / 1000;
    vec2 st = gl_FragCoord.xy/_canvasRect.xy;

    vec2 pos = vec2(st*5.0);
    vec2 pos2 = vec2(st*15.0);
	
    float n = noise(pos + vec2(time));
    float o = noise(pos2);
	
	float m = sin((n+o) * 3.1416 * 5.0)*0.5 + 0.5; 
	float bl = noise(vec2(time));
		      
    gl_FragColor = vec4(vec3(m, (m+bl)*(m+bl)*(m+bl)*(m+bl)*(m+bl)*(m+bl), bl*0.2), 1.0);
}